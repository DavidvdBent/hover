// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @unique
  email String @unique

  Course Course[]

  stripeCustomerId     String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId        String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

}

enum uploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCES
}

model Course {
  id   String @id @default(cuid())
  name String

  slug  String @unique
  hours String
  info  String
  premium Boolean

  Chapters Chapter[]

  uploadStatus uploadStatus @default(PENDING)
  url          String
  key          String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User[]
}

model Chapter {
  id       String  @id @default(cuid())
  title    String
  Videos   Video[]
  Course   Course? @relation(fields: [courseId], references: [id])
  courseId String?
}

model Video {
  id        String   @id @default(cuid())
  title     String
  url       String
  duration  Int
  info      String
  Chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId String?
}
